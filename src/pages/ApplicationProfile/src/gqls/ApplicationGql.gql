#import "./routes.gql"

query applications {
  applications {
    id
    name
    description
    enabled
    logo
    organization {
      id
      name
    }
    path
  }
}

# 新建
mutation createApplication($input: ApplicationCreateInput!) {
  createApplication(input: $input) {
    name
    path
  }
}

mutation removeApplication($id: ID!) {
  removeApplication(id: $id)
}

# 更新
mutation updateApplication($id: ID!, $input: ApplicationUpdateInput!) {
  updateApplication(id: $id, input: $input) {
    ...ApplicationInfo
    organization {
      id
      name
    }
    configuration {
      dingtalk {
        id
        name
        description
        # type
        configuration {
          ... on DingtalkConfiguration {
            corpId
            appKey
            agentId
            appSecret
          }
        }
      }
      ezoffice {
        id
        name
        description
        # type
        configuration {
          id
          ... on EZOfficeConfiguration {
            host
            key
            serviceKey
            fixedStr
          }
        }
      }
    }
    rootRoute: route(path: "root") {
      ...RouteParts
    }
    loginRoute: route(path: "login") {
      ...RouteParts
    }
    layoutRoute: route(path: "layout") {
      ...RouteParts
    }
  }
}
#新建组织
mutation createOrganization($input: OrganizationCreateInput!) {
  createOrganization(input: $input) {
    id
    name
  }
}
query queryApplication($id: ID!) {
  application(id: $id) {
    ...ApplicationInfo
    organization {
      id
      name
    }
    # dingtalk{
    #   id
    #   name
    #   corpId
    # }
    # dAnonymousLetter{
    #   id
    #   name
    #   corpId
    # }
    # weChatCP{
    #   id
    #   name
    #   corpId
    # }
    # configuration {
    #   dingtalk {
    #     id
    #     name
    #     description
    #     # type
    #     configuration {
    #       id
    #       corpId
    #       appKey
    #       agentId
    #       appSecret
    #     }
    #   }
    #   ezoffice {
    #     id
    #     name
    #     description
    #     # type
    #     configuration {
    #       id
    #       host
    #       key
    #       serviceKey
    #       fixedStr
    #     }
    #   }
    # }
    rootRoute: route(path: "root") {
      ...RouteParts
    }
    loginRoute: route(path: "login") {
      ...RouteParts
    }
    layoutRoute: route(path: "layout") {
      ...RouteParts
    }
  }
}

query queryApplicationRoutes($id: ID!) {
  application(id: $id) {
    ...ApplicationInfo
    organization {
      id
      name
    }
    rootRoute: route(path: "root") {
      ...RouteParts
    }
    loginRoute: route(path: "login") {
      ...RouteParts
    }
    layoutRoute: route(path: "layout") {
      ...RouteParts
    }
    routes {
      ...RouteParts
    }
  }
}

fragment ApplicationInfo on Application {
  id
  name
  description
  enabled
  logo
  path
  dingtalkIntegration
  ezofficeIntegration
}

#角色查询
query queryRoles($organization: ID!) {
  roles(organization: $organization) {
    id
    name
    enabled
    description
  }
}
#角色删除
mutation deleteRole($id: ID!) {
  removeRole(id: $id)
}
#新增角色
mutation createRole($organization: ID!, $input: RoleCreateInput!) {
  createRole(organization: $organization, input: $input) {
    id
    name
    enabled
    description
  }
}
#修改角色
mutation updateRole($id: ID!, $input: RoleUpdateInput!) {
  updateRole(id: $id, input: $input) {
    id
    name
    enabled
    description
  }
}
# 集成钉钉
mutation createDataSource($input: DataSourceCreateInput!) {
  dataSource: createDataSource(input: $input) {
    id
    name
    # configuration {
    #   ... on DingtalkConfiguration {
    #     corpId
    #     agentId
    #     appKey
    #     appSecret
    #   }
    #   ... on EZOfficeConfiguration {
    #     host
    #     key
    #     serviceKey
    #     fixedStr
    #   }
    # }
  }
}
# 更新集成钉钉数据
mutation updateDataSource($id: ID!, $input: DataSourceUpdateInput!) {
  dataSource: updateDataSource(id: $id, input: $input) {
    id
    name
    # configuration {
    #   ... on DingtalkConfiguration {
    #     corpId
    #     agentId
    #     appKey
    #     appSecret
    #   }
    #   ... on EZOfficeConfiguration {
    #     host
    #     key
    #     serviceKey
    #     fixedStr
    #   }
    # }
  }
}

# 同步
mutation maillist($input: DataTransmissionInput) {
  createSysJob(input: $input) {
    id
    name
  }
}


query thirdPartyDataSources($filter:ThirdPartyFilter) {
  thirdPartyDataSources(filter:$filter) {
    id
    name
  }
}


query dataSources{
  dataSources{
    id
    type
    name
  }
}

#查询密码发送配置
query	sendConfigures($filter:SendConfigureFilter){
  sendConfigures(filter:$filter){
    id
    type
    appId
    template
    outbox
    effectiveDuration
    path
    wordLength
    randomWord
    retry
    active
    processKey
    disable
  }
}

#创建
mutation createSendConfigure($input:SendConfigInput){
  createSendConfigure(input:$input){
    id
  }
}

#修改
mutation updateSendConfigure($id:ID,$input:SendConfigInput){
  updateSendConfigure(id:$id,input:$input){
    id
  }
}



#邮件
query emailTemplates($filter:EmailTemplateFilter){
  emailTemplates(filter:$filter){
    id
    tplTitle
    templateName
    isOpen
  }
}

#邮件账号
query emailSystemAccounts{
  emailSystemAccounts{
    id
    name
    account{
      id
      account
    }
  }
}

#短信模版
query smsTemplates($filter:SmsTemplateFilter){
  smsTemplates(filter:$filter){
    id
    templateName
    code
  }
}


#流程定义
query processDefinitions($filter:ProcessDefinitionFilter) {
  processDefinitions(filter:$filter){
    edges{
      node{
        id
        name
        key
      }
    }
  }
}